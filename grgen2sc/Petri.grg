/*
* This file is part of AD2SC.
*  
* AD2SC: Activity Diagram to Statechart Translator
* Copyright (C) 2010,2011 Pieter Van Gorp (pieter(at)pietervangorp.com)
* Copyright (C) 2010,2011 Rik Eshuis
* 
* AD2SC is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* AD2SC is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with AD2SC; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*/

// GrGen-version of the Petri net simulation benchmark from 
// A Benchmark Evaluation of Incremental Pattern Matching in Graph Transformation

rule fireRule {
	/*net:PetriNet -ts:transitions-> */t:Transition;
	negative {
	  t <-o:outArc- pEmpty:Place;
	  negative {
		pEmpty -ksn:tokens-> ;
	  }
	}
	negative {
	  t <-i:inhibitorArc- pFilled:Place -ks:tokens-> ;
	}
  modify {
    exec( [emitTokens(t)] && [consumeTokens(t)] );
  }
}

rule emitTokens(t:Transition) {
  t -i:inArc-> p:Place;
  modify {
    p -ks:tokens-> k:Token; 
  }
}
rule consumeTokens(t:Transition) {
  t <-o:outArc- p:Place;
  modify {
    exec(deleteToken(p));
  }
}
rule deleteToken(p:Place) {
  p -ks:tokens-> k:Token;
  replace{
    p; 
  }
}